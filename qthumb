#!/bin/bash
# A quick and dirty multitool which uses 'convert' to do the job. 
#
# In essence it just runs 'convert' on each image in the source path. 
#
# You can  pass any arguments along to 'convert' itself, allowing you to use 
# this as a multi-file wrapper around it.
#
# Copyright (C) 2011-2012 Kristian Gunstone
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

src=
dst="qthumb"
prefix="modified_"
postfix=""
suffix=
convert="convert"
depth="-maxdepth 1"

usage() {
	echo -e "Quick n dirty '$convert' multitool\n"
	echo "Usage: $(basename $0) -s <source path> [options] -- <convert args>"
	echo -e "Example: $(basename $0) -s . -- -resize 100x100 -strip -auto-orient\n"
	echo "-s <src>      set source path        (default: \"$src\")"
	echo "-d <dst>      set destination path   (default: \"$dst\")"
	echo "-p <prefix>   set target prefix      (default: \"$prefix\")"
	echo "-P <postfix>  set target postfix     (default: \"$postfix\")"
	echo "-e <suffix>   set target suffix      (default: source suffix)"
	echo -e "-r            recursively find files (default: disabled)\n"
	echo "Only the -s argument (as well as convert args) is required to run."
}

while [ $# -gt 0 ]; do 
	case "$1" in
		--) shift; break;;
		-s) src="$2";;
		-d) dst="$2";;
		-p) prefix="$2";;
		-P) postfix="$2";;
		-e) suffix="$2";;
		-r) depth=;;
		-h) usage
		    exit 1;;
	esac
	shift
done

if [ -z $src ] || [ $# = 0 ]; then
	usage
	exit 0
fi

if ! which "$convert" > /dev/null 2>&1; then
	echo "Can't find command \"$convert\""
	exit 0
fi

if [ ! -d "$dst" ]; then
	mkdir -pv "$dst" || exit $?
fi

find $src $depth -type f | while read old; do

	if ! file "$old" | grep image > /dev/null 2>&1; then
		continue 
	fi

	ext=${old##*.}

	bn=$(basename "$old" ".$ext")

	if [ "$suffix" != "" ]; then 
		ext=$suffix
	fi

	new="$dst/$prefix$bn$postfix.$ext"

	if [ -e "$new" ]; then 
		echo "Already exists: \"$new\""
		continue
	fi
		
	echo $convert $@ \"$old\" \"$new\"
	$convert "$@" "$old" "$new" || echo -e "^ ERROR\n"
done
